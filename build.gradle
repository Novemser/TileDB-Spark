buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.22"
    }
}

plugins {
    id "com.github.maiflai.scalatest" version "0.22"
    id 'com.github.sherter.google-java-format' version '0.7.1'
}

group 'io.tiledb'
version '0.1.0'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: "com.github.maiflai.scalatest"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

sourceSets {
    main {
        java {
            srcDir 'main/java'
        }
    }
    test {
        scala {
            srcDir 'test/scala'
        }
    }
}

dependencies {
    compile "org.scala-lang:scala-library:"+2.11
    compile "org.scala-lang:scala-reflect:"+2.11
    compile "org.scala-lang:scala-compiler:"+2.11

    compile 'org.apache.spark:spark-mllib_2.11:2.3.2'
    compile 'org.apache.spark:spark-sql_2.11:2.3.2'
    compile 'org.apache.spark:spark-core_2.11:2.3.2'

    compile 'io.tiledb:tiledb-java:0.1.2'

    testCompile 'org.scalatest:scalatest_2.11:3.0.1'
    testRuntime 'org.pegdown:pegdown:1.4.2'
}

test {
    systemProperty "java.library.path", new File(buildDir, "TileDB-Java/build/tiledb_jni")
    testLogging {
        showStandardStreams = true
    }
}

task installTileDBJava(type: Exec) {
    def generatedFileDir = file("$buildDir/TileDB-Java")
    outputs.dir generatedFileDir
    workingDir = buildDir
    executable = "../installTileDBJava"
}

task getHomeDir {
    doLast {
        println gradle.gradleHomeDir
    }
}

import com.github.sherter.googlejavaformatgradleplugin.GoogleJavaFormat
import com.github.sherter.googlejavaformatgradleplugin.VerifyGoogleJavaFormat

task format(type: GoogleJavaFormat) {
    source = sourceSets*.allJava
    include '**/*.java'
}

task checkFormat(type: VerifyGoogleJavaFormat) {
    source = sourceSets*.allJava
    include '**/*.java'
    ignoreFailures false
}
